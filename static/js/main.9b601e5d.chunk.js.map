{"version":3,"sources":["commponents/AddToDo/index.tsx","commponents/ToDoList/ToDoListItem/index.tsx","commponents/ToDoList/index.tsx","pages/MainPage/index.tsx","commponents/Clock/index.tsx","pages/ClockPage/index.tsx","commponents/ScrollTo/index.tsx","App.tsx","index.tsx"],"names":["AddToDo","onAddToDo","useState","inputValue","setInputValue","sendToDoHandler","useCallback","event","preventDefault","trim","className","onSubmit","onChange","target","value","rows","type","ToDoListItem","todo","classes","setClasses","useEffect","prev","join","ToDoList","todoList","length","map","id","MainPage","JSON","parse","localStorage","getItem","setToDoList","addToDoHandler","Math","random","toString","substr","setItem","stringify","clearHandler","onClick","disabled","Clock","time","setTime","interval","setInterval","Date","toLocaleTimeString","clearInterval","ClockPage","ScrollTo","topOffset","pathname","useLocation","window","scrollTo","App","history","useHistory","location","swipeDirection","setSwipeDirection","scrollOffset","useRef","curX","changePage","startCoord","endCoord","document","documentElement","scrollWidth","current","pageYOffset","push","touchStartHandler","changedTouches","pageX","mouseDownHandler","clientX","mouseUpHandler","touchEndHandler","addEventListener","removeEventListener","TransitionGroup","CSSTransition","classNames","timeout","path","exact","key","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9b601e5d.chunk.js","sourcesContent":["import { useCallback, useState } from \"react\"\r\n\r\nimport './addToDo.scss'\r\n\r\ntype AddToDoProps = {\r\n  onAddToDo: (todo: string) => void\r\n}\r\n\r\nconst AddToDo: React.FC<AddToDoProps> = ({ onAddToDo }) => {\r\n  const [inputValue, setInputValue] = useState('')\r\n  const sendToDoHandler = useCallback((event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    if (!inputValue) return\r\n    \r\n    onAddToDo(inputValue.trim())\r\n    setInputValue('')\r\n  }, [inputValue, onAddToDo])\r\n\r\n  return (\r\n    <div className=\"Add-todo\">\r\n      <form className=\"Add-todo__form\" onSubmit={(event) => sendToDoHandler(event)}>\r\n        <textarea className=\"Add-todo__input\" onChange={(event) => setInputValue(event.target.value)} value={inputValue} rows={2} />\r\n        <button type=\"submit\" className=\"Add-todo__btn\">Send</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddToDo;","import { useEffect, useState } from 'react'\r\nimport './toDoListItem.scss'\r\n\r\ntype ToDoListItemProps = {\r\n  todo: string;\r\n}\r\n\r\nconst ToDoListItem: React.FC<ToDoListItemProps> = ({ todo }) => {\r\n  const [classes, setClasses] = useState<string[]>(['Todo-list-item'])\r\n\r\n  useEffect(() => {\r\n    setClasses(prev => [...prev, 'Todo-list-item_done'])\r\n  }, [])\r\n\r\n  return (\r\n      <li className={classes.join(' ')}>\r\n        <pre>\r\n          {todo}\r\n        </pre>\r\n      </li>\r\n  )\r\n}\r\n\r\nexport default ToDoListItem;","import ToDoListItem from './ToDoListItem';\r\n\r\nimport './toDoList.scss'\r\n\r\nimport { Todo } from '../../types'\r\n\r\ntype ToDoListProps = {\r\n  todoList: Todo[];\r\n}\r\n\r\nconst ToDoList: React.FC<ToDoListProps> = ({ todoList }) => (\r\n  <ul className=\"Todo-list\">\r\n    {todoList.length === 0 && <li className=\"Todo-list__placeholder\">Пока нет записей</li>}\r\n    {todoList.map(todo => <ToDoListItem key={todo.id} todo={todo.value} />)}\r\n  </ul>\r\n)\r\n\r\nexport default ToDoList;","import { useCallback, useState } from 'react'\r\n\r\nimport AddToDo from '../../commponents/AddToDo'\r\nimport ToDoList from '../../commponents/ToDoList'\r\n\r\nimport './mainPage.scss'\r\n\r\nimport { Todo } from '../../types'\r\n\r\nconst MainPage: React.FC = () => {\r\n  const [todoList, setToDoList] = useState<Todo[]>(() => JSON.parse(localStorage.getItem('todos') || '[]'))\r\n\r\n  const addToDoHandler = useCallback((todo: string) => {\r\n    const id = Math.random().toString().substr(2, 10)\r\n    setToDoList(prev => {\r\n      localStorage.setItem('todos', JSON.stringify([...prev, {value: todo, id}]))\r\n      return [...prev, {value: todo, id}]\r\n    })\r\n  }, [])\r\n\r\n  const clearHandler = useCallback(() => {\r\n    setToDoList(() => {\r\n      localStorage.setItem('todos', JSON.stringify([]))\r\n      return []\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"Main-page\">\r\n      <AddToDo onAddToDo={addToDoHandler} />\r\n      <ToDoList todoList={todoList} />\r\n      <button type=\"reset\" className=\"btn btn-primary\" onClick={() => clearHandler()} disabled={todoList.length === 0}>Clear all</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPage","import { useEffect, useState } from 'react';\r\n\r\nimport './clock.scss'\r\n\r\nconst Clock = () => {\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTime(new Date().toLocaleTimeString())\r\n    }, 370)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"Clock\">\r\n      <div className=\"Clock__time\">{time}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clock;","import React from 'react'\r\nimport Clock from '../../commponents/Clock'\r\n\r\nimport './clockPage.scss'\r\n\r\nconst ClockPage: React.FC = () => (\r\n  <div className=\"Clock-page\">\r\n    <Clock />\r\n  </div>\r\n)\r\n\r\nexport default ClockPage","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\ntype ScrollToProps = {\r\n  topOffset: number\r\n}\r\n\r\nconst ScrollTo = ({topOffset}: ScrollToProps) => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, topOffset);\r\n  }, [pathname, topOffset])\r\n\r\n  return null\r\n}\r\n\r\nexport default ScrollTo;\r\n","import React, { useCallback, useState, useEffect, useRef } from 'react'\nimport { Route, useHistory, useLocation, Switch } from 'react-router-dom'\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\n\nimport MainPage from './pages/MainPage'\nimport ClockPage from './pages/ClockPage'\nimport ScrollTo from './commponents/ScrollTo';\n\nimport './app.scss'\n\nconst App: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [swipeDirection, setSwipeDirection] = useState<'left' | 'right'>('left')\n  const scrollOffset = useRef(0);\n  const curX = useRef(0);\n\n  const changePage = useCallback((startCoord, endCoord) => {\n    if (startCoord - endCoord > document.documentElement.scrollWidth / 4) {\n      if (history.location.pathname === '/clock') return\n\n      scrollOffset.current = window.pageYOffset;\n      setSwipeDirection('left')\n      history.push('/clock')\n    }\n    \n    if (endCoord - startCoord > document.documentElement.scrollWidth / 4) {\n      if (history.location.pathname === '/') return\n\n      setSwipeDirection('right')\n      history.push('/')\n    }\n  }, [history])\n\n  const touchStartHandler: {(event: TouchEvent): void} = useCallback((event) => {\n    curX.current = event.changedTouches[0].pageX\n  }, [])\n\n  const mouseDownHandler: {(event: MouseEvent): void} = useCallback((event) => {\n    curX.current = event.clientX\n  }, [])\n\n  const mouseUpHandler: {(event: MouseEvent): void} = useCallback((event) => {\n    changePage(curX.current, event.clientX)\n  }, [changePage])\n\n  const touchEndHandler: {(event: TouchEvent): void} = useCallback((event) => {\n    changePage(curX.current, event.changedTouches[0].pageX)\n  }, [changePage])\n\n  useEffect(() => {    \n    window.addEventListener('touchstart', touchStartHandler);\n    window.addEventListener('touchend', touchEndHandler);\n    window.addEventListener('mousedown', mouseDownHandler)\n    window.addEventListener('mouseup', mouseUpHandler)\n    \n    return () => {\n      window.removeEventListener('touchstart', touchStartHandler)\n      window.removeEventListener('touchstart', touchEndHandler)\n      window.addEventListener('mousedown', mouseDownHandler)\n      window.addEventListener('mouseup', mouseUpHandler)\n    }\n  }, [touchStartHandler, touchEndHandler, mouseDownHandler, mouseUpHandler])\n  \n  return (\n    <div className='App'>\n      <TransitionGroup>\n        <CSSTransition\n          key={location.key}\n          classNames={`${swipeDirection === 'left' ? 'swipe-left' : 'swipe-right'}`}\n          timeout={300}\n        >\n          <Switch location={location}>\n            <Route path=\"/\" exact>\n              <ScrollTo topOffset={scrollOffset.current} />\n              <MainPage />\n            </Route>\n            <Route path=\"/clock\">\n              <ClockPage />\n            </Route>\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n// import { BrowserRouter as Router } from 'react-router-dom'\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}